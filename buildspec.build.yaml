version: 0.2
env:
  variables:
    DIST_FOLDER: "dist"
    BUILD_ENV: "dev"
phases:
  install:
    runtime-versions:
      nodejs: 14
    commands:
      - echo $AWS_TARGET_ACCOUNT_ID
      - ASSUME_ROLE_ARN="arn:aws:iam::$AWS_TARGET_ACCOUNT_ID:role/ChildAccountRole"
      - TEMP_ROLE=$(aws sts assume-role --role-arn $ASSUME_ROLE_ARN --role-session-name serverlessCodeBuild)
      - export TEMP_ROLE
      - export AWS_ACCESS_KEY_ID=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.AccessKeyId')
      - export AWS_SECRET_ACCESS_KEY=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SecretAccessKey')
      - export AWS_SESSION_TOKEN=$(echo "${TEMP_ROLE}" | jq -r '.Credentials.SessionToken')      
  pre_build:
    commands:
      - echo "Install dependencies"
      - npm install -g aws-cdk
      - npm install -g typescript
      - cdk --version
      - cd api 
      - npm install
      - npm run build
      - npm prune --production
      - cd ..
      - npm install
  build:
    commands:
      - cdk bootstrap aws://$AWS_TARGET_ACCOUNT_ID/$AWS_DEFAULT_REGION
      - cdk deploy --require-approval never
      #- ls
      # - cp ./cdk.out/AwesomeServerlessApiStack.template.json ./sample-transformed.yaml
      #- aws s3 cp ./cdk.out/AwesomeServerlessApiStack.template.json s3://$SAM_BUCKET
      - |-
        echo "{ \"Parameters\" : { \"MasterSecretArn\" : \"$SECRET_ARN_DEV\", \"MasterSecretsManagerKey\" : \"$SECRET_MANAGER_KEY\", \"Stage\" : \"dev\" } }" > sample-configuration-dev.json
        echo "{ \"Parameters\" : { \"MasterSecretArn\" : \"$SECRET_ARN_PROD\", \"MasterSecretsManagerKey\" : \"$SECRET_MANAGER_KEY\", \"Stage\" : \"prod\" } }" > sample-configuration-prod.json
artifacts:
  files:
    # - sample-transformed.yaml
    - sample-configuration-dev.json
    - sample-configuration-prod.json